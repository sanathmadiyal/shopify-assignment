<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Page</title>
  <script src="https://unpkg.com/vue@3"></script>
</head>
<body>
  <div id="app">

    <!-- Display cart items if the cart is not empty -->
    <div v-if="cartData.items.length > 0">
      <h2>Cart Data:</h2>

      <!-- Cart grid for displaying individual items -->
      <div class="cart-grid">
        <div class="cart-item" v-for="product in cartData.items" :key="product.id">
          <span class="delete-icon" @click="deleteFromCart(product.id)">X</span>
          <img :src="product.image" alt="Product Image" width="100%" height="100%">
          <p v-text="product.title"></p>
          <p>Quantity: <span v-text="product.quantity"></span></p>
          <p>Price: $<span v-text="product.price"></span></p>
        </div>
      </div>

      <button class="button" @click="clearCart">Clear Cart</button>
    </div>

    <!-- Display a message if the cart is empty -->
    <div v-else>
      <p>Your cart is empty.</p>
    </div>
    
  </div>

  <script>
  
    const app = Vue.createApp({
      data() {
        return {
          cartData: {},
        };
      },
      methods: {
        // Fetch cart data from the server
        fetchCartData() {
          fetch(window.Shopify.routes.root + 'cart.js', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          })
          .then((response) => response.json())
          .then((data) => {
            // Handle the response data
            console.log('Cart Data:', data);
            document.getElementById('productCount').innerText = data.item_count;
            this.cartData = data;
          })
          .catch((error) => {
            console.error('Error fetching cart data:', error);
          });
        },

        // Delete a specific item from the cart
        deleteFromCart(variantId) {
          // Confirm with the user before deleting
          const confirmed = window.confirm('Are you sure you want to delete this item from the cart?');

          if (confirmed) {
            const formData = {
              updates: {
                [variantId]: 0,
              },
            };

            // Make the request to update the cart
            fetch(window.Shopify.routes.root + 'cart/update.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(formData),
            })
            .then(response => response.json())
            .then(data => {
              // Handle the response data
              console.log('Deleted from cart:', data);

              // Refresh the cart data after deletion
              this.fetchCartData();
            })
            .catch(error => {
              console.error('Error deleting from cart:', error);
            });
          }
        },

        // Clear the entire cart
        clearCart() {
          // Make the request to clear the entire cart
          fetch(window.Shopify.routes.root + 'cart/clear.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
          })
          .then(response => response.json())
          .then(data => {
            // Handle the response data
            console.log('Cart cleared:', data);

            // Refresh the cart data after clearing
            this.fetchCartData();
          })
          .catch(error => {
            console.error('Error clearing cart:', error);
          });
        },
      },
      created() {
        // Fetch cart data when the component is created
        this.fetchCartData();
      },
    });

    app.mount('#app');
  </script>

  <style>
    /* Add your custom styles here */

    .cart-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 16px;
    }

    .cart-item {
      border: 1px solid #ccc;
      padding: 16px;
      text-align: center;
      position: relative;
    }

    .cart-item img {
      max-width: 100%;
      height: auto;
    }

    /* Style for the delete icon */
    .delete-icon {
      position: absolute;
      top: 0;
      right: 0;
      background-color: blue;
      color: white;
      padding: 5px;
      cursor: pointer;
    }
  </style>
</body>
</html>
